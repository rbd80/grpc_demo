// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingMessage struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMessage) Reset()         { *m = PingMessage{} }
func (m *PingMessage) String() string { return proto.CompactTextString(m) }
func (*PingMessage) ProtoMessage()    {}
func (*PingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_41754443e4a5b06a, []int{0}
}
func (m *PingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMessage.Unmarshal(m, b)
}
func (m *PingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMessage.Marshal(b, m, deterministic)
}
func (dst *PingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMessage.Merge(dst, src)
}
func (m *PingMessage) XXX_Size() int {
	return xxx_messageInfo_PingMessage.Size(m)
}
func (m *PingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PingMessage proto.InternalMessageInfo

func (m *PingMessage) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type PersonRequest struct {
	Id                   int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string                   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string                   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Addresses            []*PersonRequest_Address `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PersonRequest) Reset()         { *m = PersonRequest{} }
func (m *PersonRequest) String() string { return proto.CompactTextString(m) }
func (*PersonRequest) ProtoMessage()    {}
func (*PersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_41754443e4a5b06a, []int{1}
}
func (m *PersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonRequest.Unmarshal(m, b)
}
func (m *PersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonRequest.Marshal(b, m, deterministic)
}
func (dst *PersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonRequest.Merge(dst, src)
}
func (m *PersonRequest) XXX_Size() int {
	return xxx_messageInfo_PersonRequest.Size(m)
}
func (m *PersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonRequest proto.InternalMessageInfo

func (m *PersonRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PersonRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PersonRequest) GetAddresses() []*PersonRequest_Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type PersonRequest_Address struct {
	Street               string   `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip                  string   `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	IsShippingAddress    bool     `protobuf:"varint,5,opt,name=isShippingAddress,proto3" json:"isShippingAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonRequest_Address) Reset()         { *m = PersonRequest_Address{} }
func (m *PersonRequest_Address) String() string { return proto.CompactTextString(m) }
func (*PersonRequest_Address) ProtoMessage()    {}
func (*PersonRequest_Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_41754443e4a5b06a, []int{1, 0}
}
func (m *PersonRequest_Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonRequest_Address.Unmarshal(m, b)
}
func (m *PersonRequest_Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonRequest_Address.Marshal(b, m, deterministic)
}
func (dst *PersonRequest_Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonRequest_Address.Merge(dst, src)
}
func (m *PersonRequest_Address) XXX_Size() int {
	return xxx_messageInfo_PersonRequest_Address.Size(m)
}
func (m *PersonRequest_Address) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonRequest_Address.DiscardUnknown(m)
}

var xxx_messageInfo_PersonRequest_Address proto.InternalMessageInfo

func (m *PersonRequest_Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *PersonRequest_Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PersonRequest_Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PersonRequest_Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *PersonRequest_Address) GetIsShippingAddress() bool {
	if m != nil {
		return m.IsShippingAddress
	}
	return false
}

type PersonResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonResponse) Reset()         { *m = PersonResponse{} }
func (m *PersonResponse) String() string { return proto.CompactTextString(m) }
func (*PersonResponse) ProtoMessage()    {}
func (*PersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_41754443e4a5b06a, []int{2}
}
func (m *PersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonResponse.Unmarshal(m, b)
}
func (m *PersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonResponse.Marshal(b, m, deterministic)
}
func (dst *PersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonResponse.Merge(dst, src)
}
func (m *PersonResponse) XXX_Size() int {
	return xxx_messageInfo_PersonResponse.Size(m)
}
func (m *PersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonResponse proto.InternalMessageInfo

func (m *PersonResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PersonFilter struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonFilter) Reset()         { *m = PersonFilter{} }
func (m *PersonFilter) String() string { return proto.CompactTextString(m) }
func (*PersonFilter) ProtoMessage()    {}
func (*PersonFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_41754443e4a5b06a, []int{3}
}
func (m *PersonFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonFilter.Unmarshal(m, b)
}
func (m *PersonFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonFilter.Marshal(b, m, deterministic)
}
func (dst *PersonFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonFilter.Merge(dst, src)
}
func (m *PersonFilter) XXX_Size() int {
	return xxx_messageInfo_PersonFilter.Size(m)
}
func (m *PersonFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PersonFilter proto.InternalMessageInfo

func (m *PersonFilter) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func init() {
	proto.RegisterType((*PingMessage)(nil), "api.PingMessage")
	proto.RegisterType((*PersonRequest)(nil), "api.PersonRequest")
	proto.RegisterType((*PersonRequest_Address)(nil), "api.PersonRequest.Address")
	proto.RegisterType((*PersonResponse)(nil), "api.PersonResponse")
	proto.RegisterType((*PersonFilter)(nil), "api.PersonFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	SayHello(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error)
}

type pingClient struct {
	cc *grpc.ClientConn
}

func NewPingClient(cc *grpc.ClientConn) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) SayHello(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error) {
	out := new(PingMessage)
	err := c.cc.Invoke(ctx, "/api.Ping/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	SayHello(context.Context, *PingMessage) (*PingMessage, error)
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Ping/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).SayHello(ctx, req.(*PingMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Ping_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// PersonClient is the client API for Person service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonClient interface {
	// Get all Persons with filter - A Server to client steaming to RPC
	GetPersons(ctx context.Context, in *PersonFilter, opts ...grpc.CallOption) (Person_GetPersonsClient, error)
	CreatePerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonResponse, error)
}

type personClient struct {
	cc *grpc.ClientConn
}

func NewPersonClient(cc *grpc.ClientConn) PersonClient {
	return &personClient{cc}
}

func (c *personClient) GetPersons(ctx context.Context, in *PersonFilter, opts ...grpc.CallOption) (Person_GetPersonsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Person_serviceDesc.Streams[0], "/api.Person/GetPersons", opts...)
	if err != nil {
		return nil, err
	}
	x := &personGetPersonsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Person_GetPersonsClient interface {
	Recv() (*PersonRequest, error)
	grpc.ClientStream
}

type personGetPersonsClient struct {
	grpc.ClientStream
}

func (x *personGetPersonsClient) Recv() (*PersonRequest, error) {
	m := new(PersonRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *personClient) CreatePerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonResponse, error) {
	out := new(PersonResponse)
	err := c.cc.Invoke(ctx, "/api.Person/CreatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonServer is the server API for Person service.
type PersonServer interface {
	// Get all Persons with filter - A Server to client steaming to RPC
	GetPersons(*PersonFilter, Person_GetPersonsServer) error
	CreatePerson(context.Context, *PersonRequest) (*PersonResponse, error)
}

func RegisterPersonServer(s *grpc.Server, srv PersonServer) {
	s.RegisterService(&_Person_serviceDesc, srv)
}

func _Person_GetPersons_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PersonFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PersonServer).GetPersons(m, &personGetPersonsServer{stream})
}

type Person_GetPersonsServer interface {
	Send(*PersonRequest) error
	grpc.ServerStream
}

type personGetPersonsServer struct {
	grpc.ServerStream
}

func (x *personGetPersonsServer) Send(m *PersonRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _Person_CreatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServer).CreatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Person/CreatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServer).CreatePerson(ctx, req.(*PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Person_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Person",
	HandlerType: (*PersonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePerson",
			Handler:    _Person_CreatePerson_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPersons",
			Handler:       _Person_GetPersons_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_41754443e4a5b06a) }

var fileDescriptor_api_41754443e4a5b06a = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xcd, 0x8a, 0xd4, 0x40,
	0x10, 0xde, 0x24, 0x93, 0xf9, 0xa9, 0x1d, 0x97, 0xdd, 0x52, 0x24, 0x04, 0x0f, 0x43, 0x9f, 0xa2,
	0xc8, 0x44, 0xc7, 0x83, 0xba, 0x37, 0x15, 0x54, 0x04, 0x61, 0xc9, 0x3e, 0x41, 0x3b, 0x29, 0xb2,
	0x8d, 0xd9, 0xee, 0x36, 0xdd, 0x8b, 0x8c, 0x78, 0xf2, 0xea, 0xd1, 0x87, 0xf0, 0x81, 0x7c, 0x05,
	0x1f, 0x44, 0xba, 0x3b, 0x71, 0x1c, 0xe2, 0xad, 0xbe, 0x2f, 0x5f, 0x57, 0x7d, 0xf5, 0x55, 0x60,
	0xc1, 0xb5, 0x58, 0xeb, 0x4e, 0x59, 0x85, 0x09, 0xd7, 0x22, 0xbf, 0xd7, 0x28, 0xd5, 0xb4, 0x54,
	0x72, 0x2d, 0x4a, 0x2e, 0xa5, 0xb2, 0xdc, 0x0a, 0x25, 0x4d, 0x90, 0xb0, 0xfb, 0x70, 0x7c, 0x21,
	0x64, 0xf3, 0x9e, 0x8c, 0xe1, 0x0d, 0x61, 0x0e, 0xf3, 0xa6, 0x23, 0xb2, 0x42, 0x36, 0x59, 0xb4,
	0x8a, 0x8a, 0x45, 0xf5, 0x17, 0xb3, 0x9f, 0x31, 0xdc, 0xba, 0xa0, 0xce, 0x28, 0x59, 0xd1, 0xa7,
	0x1b, 0x32, 0x16, 0x4f, 0x20, 0x16, 0xb5, 0xd7, 0xa5, 0x55, 0x2c, 0x6a, 0x44, 0x98, 0x48, 0x7e,
	0x4d, 0x59, 0xec, 0x5f, 0xfa, 0x1a, 0xef, 0x40, 0x4a, 0xd7, 0x5c, 0xb4, 0x59, 0xe2, 0xc9, 0x00,
	0x1c, 0xab, 0xaf, 0x94, 0xa4, 0x6c, 0x12, 0x58, 0x0f, 0xf0, 0x19, 0x2c, 0x78, 0x5d, 0x77, 0x64,
	0x0c, 0x99, 0x2c, 0x5d, 0x25, 0xc5, 0xf1, 0x26, 0x5f, 0xbb, 0x75, 0x0e, 0xc6, 0xae, 0x5f, 0x04,
	0x4d, 0xb5, 0x17, 0xe7, 0xdf, 0x23, 0x98, 0xf5, 0x34, 0xde, 0x85, 0xa9, 0xb1, 0xce, 0x74, 0xbf,
	0x41, 0x8f, 0x9c, 0xbb, 0xad, 0xb0, 0xbb, 0xc1, 0x9d, 0xab, 0x9d, 0x0f, 0x63, 0xb9, 0xa5, 0xc1,
	0x9d, 0x07, 0x78, 0x0a, 0xc9, 0x17, 0xa1, 0x7b, 0x6f, 0xae, 0xc4, 0x87, 0x70, 0x26, 0xcc, 0xe5,
	0x95, 0xd0, 0x5a, 0xc8, 0xa6, 0x1f, 0x94, 0xa5, 0xab, 0xa8, 0x98, 0x57, 0xe3, 0x0f, 0xec, 0x1c,
	0x4e, 0x06, 0xc7, 0x46, 0x2b, 0x69, 0x68, 0x94, 0x54, 0x06, 0x33, 0x73, 0xb3, 0xdd, 0xba, 0x2e,
	0xb1, 0xef, 0x32, 0x40, 0x56, 0xc0, 0x32, 0xbc, 0x7d, 0x2d, 0x5a, 0x4b, 0x9d, 0x53, 0x7e, 0xa4,
	0xdd, 0x67, 0xd5, 0xd5, 0xfd, 0x3a, 0x03, 0xdc, 0xbc, 0x83, 0x89, 0x3b, 0x1d, 0xbe, 0x84, 0xf9,
	0x25, 0xdf, 0xbd, 0xa5, 0xb6, 0x55, 0x78, 0x1a, 0xe2, 0xda, 0x5f, 0x34, 0x1f, 0x31, 0x0c, 0xbf,
	0xfd, 0xfa, 0xfd, 0x23, 0x5e, 0xb2, 0x59, 0xf9, 0xb8, 0x74, 0xae, 0xcf, 0xa3, 0x07, 0x9b, 0xaf,
	0x30, 0x0d, 0x53, 0xf1, 0x29, 0xc0, 0x1b, 0xb2, 0x01, 0x18, 0x3c, 0xfb, 0x27, 0xfe, 0x60, 0x28,
	0xc7, 0xf1, 0x45, 0xd8, 0xd1, 0xa3, 0x08, 0x9f, 0xc3, 0xf2, 0x55, 0x47, 0xdc, 0x52, 0xdf, 0xe8,
	0x3f, 0xba, 0xfc, 0xf6, 0x01, 0x17, 0xb2, 0x61, 0x47, 0x1f, 0xa6, 0xfe, 0x5f, 0x7c, 0xf2, 0x27,
	0x00, 0x00, 0xff, 0xff, 0xf9, 0xd1, 0xfb, 0x4c, 0xbb, 0x02, 0x00, 0x00,
}
